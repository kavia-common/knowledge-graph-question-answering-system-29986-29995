{"is_source_file": true, "format": "Python", "description": "This file defines the QuestionAnswerService class which orchestrates NLP mapping and Neo4j querying for a question-answering backend. It includes imports, class definition, method implementations, and initializes an instance of the service.", "external_files": ["./nlp_mapping", "./neo4j_service"], "external_methods": ["RuleBasedNLPMappings.map_question", "neo4j_service.run_cypher"], "published": ["qa_service"], "classes": [{"name": "QuestionAnswerService", "description": "A class that manages the process of translating natural language questions into Cypher queries and executing them against a Neo4j database, returning structured results."}], "methods": [{"name": "None __init__(self)", "description": "Constructor that initializes the NLP mapper component.", "scope": "QuestionAnswerService", "scopeKind": "class"}, {"name": "Dict[str,Any] ask(self, question: str, top_k: int = 10)", "description": "Main method to process a natural language question, perform mapping, execute the query, and return results with metadata.", "scope": "QuestionAnswerService", "scopeKind": "class"}], "calls": ["self._mapper.map_question", "neo4j_service.run_cypher"], "search-terms": ["QuestionAnswerService", "neo4j_service", "nlp_mapping", "map_question", "run_cypher", "orchestrates NLP mapping", "question answering backend"], "state": 2, "file_id": 21, "knowledge_revision": 43, "git_revision": "", "ctags": [{"_type": "tag", "name": "QuestionAnswerService", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/services.py", "pattern": "/^class QuestionAnswerService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/services.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "QuestionAnswerService", "scopeKind": "class"}, {"_type": "tag", "name": "ask", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/services.py", "pattern": "/^    def ask(self, question: str, top_k: int = 10) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, question: str, top_k: int = 10)", "scope": "QuestionAnswerService", "scopeKind": "class"}, {"_type": "tag", "name": "qa_service", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/services.py", "pattern": "/^qa_service = QuestionAnswerService()$/", "language": "Python", "kind": "variable"}], "hash": "c867de15bba9c93232e67cf127ec0fda", "format-version": 4, "code-base-name": "question_answering_backend", "filename": "question_answering_backend/api/services.py", "fields": [{"name": "qa_service = QuestionAnswerService()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"43": ""}]}