{"is_source_file": true, "format": "Python", "description": "This file defines a Python module that manages a singleton Neo4j driver instance, providing a simple query interface. It includes configuration management via environment variables, connection setup with validation, and methods to run Cypher queries and close the driver. The key class is _Neo4jService, and a singleton instance neo4j_service is created for external use.", "external_files": ["neo4j", "neo4j.exceptions"], "external_methods": ["neo4j.GraphDatabase.driver", "neo4j.basic_auth", "neo4j.exceptions.Neo4jError", "neo4j.exceptions.ServiceUnavailable", "neo4j.exceptions.AuthError"], "published": ["neo4j_service"], "classes": [{"name": "_Neo4jService", "description": "A class that manages the Neo4j Python driver, handles lazy initialization, configuration validation, and provides methods to run Cypher queries and close the driver."}], "methods": [{"name": "None __init__(self)", "description": "Initializes the _Neo4jService instance, setting driver to None and preparing for lazy connection setup.", "scope": "_Neo4jService", "scopeKind": "class"}, {"name": "Dict[str,Optional[str]] _get_env(self)", "description": "Retrieves Neo4j connection configuration from environment variables.", "scope": "_Neo4jService", "scopeKind": "class"}, {"name": "None _ensure_driver(self)", "description": "Initializes the Neo4j driver if not already set, with configuration validation and error handling.", "scope": "_Neo4jService", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] run_cypher(self, query: str, parameters: Optional[Dict[str, Any]] = None)", "description": "Executes a Cypher query with optional parameters, returns result rows as list of dicts, and raises ValueError on connection or query errors.", "scope": "_Neo4jService", "scopeKind": "class"}, {"name": "None close(self)", "description": "Closes the Neo4j driver if it is open.", "scope": "_Neo4jService", "scopeKind": "class"}], "calls": ["os.getenv", "socket.getaddrinfo", "basic_auth", "GraphDatabase.driver", "session.run", "record.data()", "self._driver.session", "self._driver.close"], "search-terms": ["neo4j service singleton", "environment variable Neo4j config", "lazy Neo4j driver initialization", "Cypher query execution Python", "Neo4j driver error handling", "bolt:// URI validation", "Neo4j connection validation"], "state": 2, "file_id": 24, "knowledge_revision": 93, "git_revision": "e0d66a75b41123b4df7d6fac9416d1197da92fec", "revision_history": [{"59": "867b509654b22990191c7d9890e9bfda3d9076b3"}, {"87": "867b509654b22990191c7d9890e9bfda3d9076b3"}, {"92": "e0d66a75b41123b4df7d6fac9416d1197da92fec"}, {"93": "e0d66a75b41123b4df7d6fac9416d1197da92fec"}], "ctags": [{"_type": "tag", "name": "_Neo4jService", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^class _Neo4jService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "_Neo4jService", "scopeKind": "class"}, {"_type": "tag", "name": "_ensure_driver", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^    def _ensure_driver(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "_Neo4jService", "scopeKind": "class"}, {"_type": "tag", "name": "_get_env", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^    def _get_env(self) -> Dict[str, Optional[str]]:$/", "language": "Python", "typeref": "typename:Dict[str,Optional[str]]", "kind": "member", "signature": "(self)", "scope": "_Neo4jService", "scopeKind": "class"}, {"_type": "tag", "name": "close", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^    def close(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "_Neo4jService", "scopeKind": "class"}, {"_type": "tag", "name": "neo4j_service", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^neo4j_service = _Neo4jService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "run_cypher", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^    def run_cypher(self, query: str, parameters: Optional[Dict[str, Any]] = None) -> List[Dict[s/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self, query: str, parameters: Optional[Dict[str, Any]] = None)", "scope": "_Neo4jService", "scopeKind": "class"}], "hash": "13ddec2bd32a3d8945bcca479d2ad637", "format-version": 4, "code-base-name": "question_answering_backend", "filename": "question_answering_backend/api/neo4j_service.py", "fields": [{"name": "neo4j_service = _Neo4jService()", "scope": "", "scopeKind": "", "description": "unavailable"}]}