{"is_source_file": true, "format": "Python", "description": "This file implements a singleton service class for connecting to a Neo4j database, handling configuration via environment variables, and providing methods to execute Cypher queries and manage the database driver lifecycle.", "external_files": ["neo4j", "neo4j.exceptions", "os", "typing"], "external_methods": ["neo4j.GraphDatabase.driver", "neo4j.basic_auth", "neo4j.exceptions.Neo4jError", "neo4j.exceptions.ServiceUnavailable", "neo4j.exceptions.AuthError"], "published": ["neo4j_service"], "classes": [{"name": "_Neo4jService", "description": "A class that manages a Neo4j driver instance, initialized lazily, and provides methods to execute queries and close the driver."}], "methods": [{"name": "None __init__(self)", "description": "Initializes the Neo4j service object with lazy driver and error state.", "scope": "_Neo4jService", "scopeKind": "class"}, {"name": "Dict[str,Optional[str]] _get_env(self)", "description": "Retrieves Neo4j connection configuration from environment variables.", "scope": "_Neo4jService", "scopeKind": "class"}, {"name": "None _ensure_driver(self)", "description": "Ensures the Neo4j driver is initialized; sets configuration errors if missing or invalid.", "scope": "_Neo4jService", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] run_cypher(self, query: str, parameters: Optional[Dict[str, Any]] = None)", "description": "Executes a Cypher query with optional parameters, returning result rows or raising errors.", "scope": "_Neo4jService", "scopeKind": "class"}, {"name": "None close(self)", "description": "Closes the Neo4j driver, cleaning up resources.", "scope": "_Neo4jService", "scopeKind": "class"}], "calls": ["neo4j.GraphDatabase.driver", "neo4j.basic_auth", "session.run"], "search-terms": ["Neo4j singleton service", "Cypher query execution", "Neo4j environment configuration", "Lazy driver initialization"], "state": 2, "file_id": 24, "knowledge_revision": 59, "git_revision": "867b509654b22990191c7d9890e9bfda3d9076b3", "ctags": [{"_type": "tag", "name": "_Neo4jService", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^class _Neo4jService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "_Neo4jService", "scopeKind": "class"}, {"_type": "tag", "name": "_ensure_driver", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^    def _ensure_driver(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "_Neo4jService", "scopeKind": "class"}, {"_type": "tag", "name": "_get_env", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^    def _get_env(self) -> Dict[str, Optional[str]]:$/", "language": "Python", "typeref": "typename:Dict[str,Optional[str]]", "kind": "member", "signature": "(self)", "scope": "_Neo4jService", "scopeKind": "class"}, {"_type": "tag", "name": "close", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^    def close(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "_Neo4jService", "scopeKind": "class"}, {"_type": "tag", "name": "neo4j_service", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^neo4j_service = _Neo4jService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "run_cypher", "path": "/home/kavia/workspace/code-generation/knowledge-graph-question-answering-system-29986-29995/question_answering_backend/api/neo4j_service.py", "pattern": "/^    def run_cypher(self, query: str, parameters: Optional[Dict[str, Any]] = None) -> List[Dict[s/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self, query: str, parameters: Optional[Dict[str, Any]] = None)", "scope": "_Neo4jService", "scopeKind": "class"}], "hash": "7e8361bb9ec9a6446af2c36f3c2a3e2f", "format-version": 4, "code-base-name": "question_answering_backend", "filename": "question_answering_backend/api/neo4j_service.py", "fields": [{"name": "neo4j_service = _Neo4jService()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"59": "867b509654b22990191c7d9890e9bfda3d9076b3"}]}